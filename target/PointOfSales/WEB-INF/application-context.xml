<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xsi:schemaLocation="
		http://www.springframework.org/schema/beans
		http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context
		http://www.springframework.org/schema/context/spring-context.xsd
		http://www.springframework.org/schema/mvc
		http://www.springframework.org/schema/mvc/spring-mvc.xsd
		http://www.springframework.org/schema/tx
		http://www.springframework.org/schema/tx/spring-tx.xsd">

    <!-- Add support for component scanning -->
    <context:component-scan base-package="com.ai.pos" />

    <!-- Add support for conversion, formatting and validation support -->
    <mvc:annotation-driven/>

    <!-- Define Spring MVC view resolver -->
    <bean
            class="org.springframework.web.servlet.view.InternalResourceViewResolver">
        <property name="prefix" value="/WEB-INF/view/" />
        <property name="suffix" value=".jsp" />
    </bean>

    <!-- Step 1: Define Database DataSource / connection pool -->
    <bean id="myDataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource"
          destroy-method="close">
        <property name="driverClass" value="com.mysql.cj.jdbc.Driver" />
        <property name="jdbcUrl" value="jdbc:mysql://localhost:3306/point_of_sales?useSSL=false&amp;serverTimezone=UTC" />
<!--        <property name="jdbcUrl" value="jdbc:mysql://localhost:3306/point_of_sales" />-->
        <property name="user" value="root" />
        <property name="password" value="admin" />

        <!-- these are connection pool properties for C3P0 -->
        <property name="minPoolSize" value="5" />
        <property name="maxPoolSize" value="20" />
        <property name="maxIdleTime" value="30000" />
    </bean>

    <!-- Step 2: Setup Hibernate session factory -->
    <bean id="sessionFactory"
          class="org.springframework.orm.hibernate5.LocalSessionFactoryBean">
        <property name="dataSource" ref="myDataSource"></property>
        <property name="annotatedClasses">
            <list>
                <value>com.ai.pos.model.EmployeeOutlet</value>
                <value>com.ai.pos.model.ItemInventory</value>
                <value>com.ai.pos.model.MstCategory</value>
                <value>com.ai.pos.model.MstCustomer</value>
                <value>com.ai.pos.model.MstDistrict</value>
                <value>com.ai.pos.model.MstEmployee</value>
                <value>com.ai.pos.model.MstItem</value>
                <value>com.ai.pos.model.MstItemVariant</value>
                <value>com.ai.pos.model.MstOutlet</value>
                <value>com.ai.pos.model.MstProvince</value>
                <value>com.ai.pos.model.MstRegion</value>
                <value>com.ai.pos.model.MstRole</value>
                <value>com.ai.pos.model.MstSupplier</value>
                <value>com.ai.pos.model.MstUser</value>
                <value>com.ai.pos.model.TAdjustment</value>
                <value>com.ai.pos.model.TAdjustmentDetail</value>
                <value>com.ai.pos.model.TAdjustmentHistory</value>
                <value>com.ai.pos.model.TPo</value>
                <value>com.ai.pos.model.TPoDetail</value>
                <value>com.ai.pos.model.TPoHistory</value>
                <value>com.ai.pos.model.TPr</value>
                <value>com.ai.pos.model.TPrDetail</value>
                <value>com.ai.pos.model.TPrHistory</value>
                <value>com.ai.pos.model.TSo</value>
                <value>com.ai.pos.model.TSoDetail</value>
                <value>com.ai.pos.model.TTransferStock</value>
                <value>com.ai.pos.model.TTransferStockDetail</value>
                <value>com.ai.pos.model.TTransferStockHistory</value>
            </list>
        </property>
        <property name="packagesToScan" value="com.ai.pos.model" />
        <property name="hibernateProperties">
            <props>
                <prop key="hibernate.dialect">org.hibernate.dialect.MySQLDialect</prop>
                <prop key="hibernate.show_sql">true</prop>
                <prop key="hibernate.current_session_context_class">
                    org.springframework.orm.hibernate5.SpringSessionContext
                </prop>
            </props>
        </property>
    </bean>

    <!-- Step 3: Setup Hibernate transaction manager -->
    <bean id="myTransactionManager"
          class="org.springframework.orm.hibernate5.HibernateTransactionManager">
        <property name="sessionFactory" ref="sessionFactory"/>
    </bean>

    <!-- Step 4: Enable configuration of transactional behavior based on annotations -->
    <tx:annotation-driven transaction-manager="myTransactionManager" />

    <!-- Add support for reading web resource: css, js, images, etc -->
<!--    <mvc:resources location="/resources/" mapping="/resources/**"></mvc:resources>-->

<!--    <bean id="asetDAO" class="com.ai.pos"/>-->

</beans>
